<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:ui="weave.ui.*"
				xmlns="weave.ui.admin.managers.*" 
				width="100%" height="100%"
				verticalAlign="middle"
				label="Visualizations"
				creationComplete="handleCreationComplete()" xmlns:admin="weave.ui.admin.*">
	<mx:TabNavigator height="100%" paddingLeft="8" paddingRight="8" paddingBottom="8" paddingTop="8">
		<mx:VBox label="My files">
			<mx:HBox>
				<mx:Button label="Open selected file" click="openSelectedFile(userFolderTreeWithSearch)" enabled="{userFolderTreeWithSearch.tree.selectedItem != null}"/>
				<mx:Button label="Delete selected file" click="removeClientConfigFile()" enabled="{userFolderTreeWithSearch.tree.selectedItem != null}"/>
				<mx:Button label="Create new file" click="createFile()"/>
			</mx:HBox>
			<ui:TreeWithSearch id="userFolderTreeWithSearch" prompt="Search"
							   doubleClickEnabled="true" doubleClick="if (userFolderTreeWithSearch.tree.contains(event.target as DisplayObject)) openSelectedFile(userFolderTreeWithSearch)"
							   toolTip="Double-click a file name to open it with Weave."/>
			<mx:HBox width="100%">
				<mx:Spacer width="100%"/>
				<mx:Button label="Refresh" click="Admin.service.getWeaveFileNames(false)"/>
			</mx:HBox>
		</mx:VBox>
		<mx:VBox label="All files">
			<mx:HBox>
				<mx:Button label="Open selected file" click="openSelectedFile(sharedTreeWithSearch)" enabled="{sharedTreeWithSearch.tree.selectedItem != null}"/>
			</mx:HBox>
			<ui:TreeWithSearch id="sharedTreeWithSearch" prompt="Search"
							   doubleClickEnabled="true" doubleClick="if (sharedTreeWithSearch.tree.contains(event.target as DisplayObject)) openSelectedFile(sharedTreeWithSearch)"
							   toolTip="Double-click a file name to open it with Weave."/>
			<mx:HBox width="100%">
				<mx:Spacer width="100%"/>
				<mx:Button label="Refresh" click="Admin.service.getWeaveFileNames(true)"/>
			</mx:HBox>
		</mx:VBox>
	</mx:TabNavigator>
	<admin:WeaveFileInfo id="weaveFileInfo" width="100%"/>
	
<!--	<mx:TabNavigator paddingBottom="8" paddingLeft="8" paddingRight="8" paddingTop="8" width="100%" height="100%">
		<mx:Canvas label="Settings" width="100%" height="100%">
			<mx:VBox width="100%" height="100%">
				<mx:VBox width="100%">
					<mx:Label text="This space for rent"/>
				</mx:VBox>
			</mx:VBox>
		</mx:Canvas>
	</mx:TabNavigator>
-->
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.controls.Alert;
			
			import weave.services.Admin;
			import weave.utils.EventUtils;
			import weave.utils.PopUpUtils;
			
			
			private function handleCreationComplete():void
			{
				BindingUtils.bindSetter(sharedTreeWithSearch.generateFlatTreeFromLabels, Admin.instance, "weaveFileNames");
				BindingUtils.bindSetter(userFolderTreeWithSearch.generateFlatTreeFromLabels, Admin.instance, "privateWeaveFileNames");
				
				function clearPreview(..._):void { weaveFileInfo.clearPreview(); }
				BindingUtils.bindSetter(clearPreview, Admin.instance, "weaveFileNames");
				BindingUtils.bindSetter(clearPreview, Admin.instance, "privateWeaveFileNames");
				
				var delay:int = 100;
				var preview:Function = function(event:Event):void {
						previewSelectedFile(event.currentTarget.owner as TreeWithSearch);
					};
				preview = EventUtils.generateDelayedCallback(this, preview, delay, true);
				userFolderTreeWithSearch.tree.addEventListener(Event.CHANGE, preview);
				sharedTreeWithSearch.tree.addEventListener(Event.CHANGE, preview);
			}
			
			private function openSelectedFile(component:TreeWithSearch):void
			{
				var item:Object = component.tree.selectedItem;
				if (item)
					Admin.instance.openWeavePopup(item.label);
			}
			
			private function previewSelectedFile(component:TreeWithSearch):void
			{
				var item:Object = component.tree.selectedItem;
				if (item)
					weaveFileInfo.updatePreview(item.label);
			}
			
			private function createFile():void
			{
				Admin.instance.openWeavePopup();
			}
			
			private function removeClientConfigFile():void
			{
				if (userFolderTreeWithSearch.tree.selectedItem == null)
				{
					Alert.show("No file is selected.", "Error");
					return;
				}
				
				var fileName:String = userFolderTreeWithSearch.tree.selectedItem.label;
				
				if (fileName != "" && fileName != null)
				{
					// ask user to confirm
					PopUpUtils.confirm(
						this,
						"Confirm Delete",
						'Delete file "'+fileName+'"?',
						del, null,
						'Delete', 'Cancel'
					);
					fileName = fileName.split("/").pop();
					
					function del():void
					{
						Admin.service.removeWeaveFile(fileName);
					}
				}
				else
				{
					Alert.show("No File was selected","Error");
				}
			}
			
		]]>
	</mx:Script>
	
</mx:HBox>
