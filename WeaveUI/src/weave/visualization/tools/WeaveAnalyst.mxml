<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<!---
	Workspace that has data manipulation, data mining, data statistics, R and Visualization Modules
	Weave Analyst Mode can be enabled or disabled
	@author spurushe
-->
<mx:Canvas 		xmlns="weave.ui.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
				width="100%"  height="100%"
				
				autoLayout="true"
				implements="weave.api.ui.IVisTool" xmlns:tools="weave.visualization.tools.*" xmlns:DataMiningEditors="weave.ui.DataMiningEditors.*" 
				>
	
	<mx:HDividedBox id="parentCanvasDiv" width="100%" height="100%">
		<!--Data Manipulation-->
		<mx:VDividedBox width="20%" height="100%">
			<mx:Label text="{lang('(1) Select data to use in Weave Analyst')}"/>	
			<ColumnListComponent id="inputColumnList" label="{lang('Input columns')}" hashMap="{inputColumns}" width="100%" height="40%"   />
			<!--mx:ComboBox width="100%" height="5%">
				<mx:ArrayCollection>
					<mx:String>Data Mining Algorithms</mx:String>
					<mx:String>1.Principal Component Analysis</mx:String>
					<mx:String>2.KMeans Clustering</mx:String>
					<mx:String>3.Confusion Matrix</mx:String>
				</mx:ArrayCollection>
			</mx:ComboBox-->
			<tools:WeaveAnalystDataMiningModule  id="dataMinAlgos" width="100%" height="5%" change="dataMinAlgos_changeHandler(event)">
				<mx:String>Data Mining Algorithms</mx:String>
				<mx:String>1.Principal Component Analysis</mx:String>
				<mx:String>2.KMeans Clustering</mx:String>
				<mx:String>3.Confusion Matrix</mx:String>
			</tools:WeaveAnalystDataMiningModule>
			<tools:WeaveAnalystStatisticsModule  id="statModule" width="100%" height="40%">		</tools:WeaveAnalystStatisticsModule>	
		</mx:VDividedBox>
		
		<!--Visualization Space-->
		<mx:VBox id="vizSpace" width="40%" height="65%">
			<mx:Label text = "{lang('(3) Vizualization Space')}"/>	
			<mx:Label text="{lang('(4)Data mining Result Console')}"/>
			<mx:TextArea width="100%" height="35%" id="resultConsole"/>
		</mx:VBox>
		
		
		<mx:VDividedBox id="datastats" width="25%" height = "100%">
			
			<DataMiningEditors:DataMiningPlatter width="100%" height="100%">
				
			</DataMiningEditors:DataMiningPlatter>
			<!--tools:RInterfaceTool width="100%" height="45%"></tools:RInterfaceTool-->
				
		</mx:VDividedBox>
	</mx:HDividedBox>
	
	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			
			import weave.Weave;
			import weave.api.data.IAttributeColumn;
			import weave.api.registerLinkableChild;
			import weave.api.ui.IVisTool;
			import weave.core.LinkableHashMap;
			import weave.core.UIUtils;
			import weave.editors.PrincipalComponentEditor;
			import weave.services.WeaveRServlet;


			private static var analystInstance:WeaveAnalyst = null;
			
			public var analystMap:LinkableHashMap = registerLinkableChild(this, new LinkableHashMap(IVisTool));
			//columns
			public const inputColumns:LinkableHashMap = registerLinkableChild(this, new LinkableHashMap(IAttributeColumn));
			[Bindable]
			public var results:LinkableHashMap = registerLinkableChild(this, new LinkableHashMap(IAttributeColumn));
			private var pcEditor:PrincipalComponentEditor;
			private var _initialing:* = constructor();
			
			
			 protected function constructor():*
			{
				 var columns:Array = SimpleVisTool.getDefaultColumnsOfMostCommonKeyType();
				 for (var i:int = 0; i < columns.length; i++)
					 inputColumns.requestObjectCopy(null, columns[i]);
				 
			}
			
			public static function getInstance():WeaveAnalyst
			{
				if(analystInstance == null) analystInstance = new WeaveAnalyst();
				return analystInstance;
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				inputColumns.addGroupedCallback(this, statModule.normalizationinR);
				inputColumns.addGroupedCallback(this, statModule.displayStatistics);
			}
			
			
			
			protected function dataMinAlgos_changeHandler(event:ListEvent):void
			{
				if(UIUtils.hasFocus(dataMinAlgos)) 
				{
					var selectedOption:String = dataMinAlgos.selectedLabel;
				}
				
				
				if(selectedOption == "1.Principal Component Analysis")
				{
					pcEditor = new PrincipalComponentEditor();
					this.addChild(pcEditor);
				}
			}
			
		]]>
	</mx:Script>
</mx:Canvas>